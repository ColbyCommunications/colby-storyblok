// .no-scroll {

// 	.site-header-wrapper {

// 		@screen menu-sm {

// 			@apply relative;

// 			position: fixed;
// 			width: 100vw;
// 			height: 100%;

// 			&::after {

// 				@apply block absolute inset-0 bg-darken-80 z-0;
// 				content: "";
// 			}

// 			.site-header-layout {

// 				@apply relative;
// 			}
// 		}

// 	}
// }

/* GRID LAYOUT */

.header-title-bar {
    display: grid;
    grid-template-columns: var(--page-padding) auto auto var(--page-padding);
    grid-template-areas: 'edge_l logo toggle edge_r';
}

.header-main-menu-wrapper,
.header-units-menu-wrapper,
.header-quicklinks-wrapper {
    display: grid;
    grid-template-columns: var(--page-padding) auto var(--page-padding);
    grid-template-areas: 'edge_l menu_content edge_r';

    > * {
        grid-area: menu_content;
    }
}

// .header-section-wrapper {
// 	display: grid;
// 	grid-template-columns: [left] minmax(0.5rem, 1fr) [startcontent] minmax(auto, theme("screens.2xl")) [endcontent] minmax(0.5rem, 1fr) [right];
// }

// .grid-cols-header {
// 	grid-template-rows: auto auto 1fr;

// 	grid-template-areas:
// 		"slug slug"
// 		"logo menus";
// }

.header-logo-wrapper {
    grid-area: logo;
}

.menu-toggle-button-wrapper {
    grid-area: toggle;
}

// .menu-scroll-wrapper {
// 	grid-column: 1 / -1;
// }

// @screen md {

// 	.grid-cols-header {

// 		grid-template-rows: auto auto;
// 		grid-template-columns: repeat(2, 1fr);

// 		grid-template-areas:
// 			"slug  slug"
// 			"menus menus";
// 	}

// 	.menu-scroll-wrapper {
// 		grid-area: menus;
// 	}

// 	.header-logo-wrapper {
// 		grid-row: 1 / 3;
// 		grid-column: 1;
// 	}
// }

// @screen xl {

// 	.grid-cols-header {

// 		grid-template-columns: repeat(2, auto);
// 		grid-template-areas:
// 			"logo slug"
// 			"logo menus";
// 	}

// 	.header-logo-wrapper {
// 		grid-column: auto;
// 	}
// }

/* END COLUMN LAYOUT */

// .header-logo-wrapper {

// 	@screen md {
// 		max-width: 65%;
// 	}

// 	@screen xl {
// 		max-width: none;
// 	}
// }

.header-logo {
    display: block;

    svg {
        .no-nav & {
            height: 100%;
        }

        width: 100%;
    }

    @screen menu-sm {
        // max-width: 12rem;

        svg {
            height: auto;
        }
    }

    @screen md {
        svg {
            // max-width: 12rem;
        }
    }

    @screen xl {
        max-width: calc(100vw - 4rem);
    }
}

.main-menu {
    text-underline-offset: 0.4rem;
}

@keyframes growDown {
    0% {
        transform: scaleY(0);
    }

    80% {
        transform: scaleY(1.01);
    }

    100% {
        transform: scaleY(1);
    }
}

@screen menu-sm {
    .menu-scroll-wrapper {
        .no-scroll & {
            overflow: scroll;
        }
    }

    .site-header-layout {
        .no-scroll & {
            padding-bottom: 0;
            height: 100%;
        }
    }

    .collapsible-menu {
        display: none;
        animation: growDown 200ms ease-in-out forwards;
        transform-origin: top center;
        transition-property: max-height, padding;

        &:focus-within {
            max-height: none;
        }
    }

    label[for='menu-toggle'] {
        --btn-padding-x: 0.5rem;
        --btn-padding-y: 0.5rem;

        .toggle-icon-inactive,
        .toggle-icon-active {
            margin-left: 0.125rem;
        }

        .toggle-icon-inactive {
            display: block;
        }

        .toggle-icon-active {
            display: none;
        }
    }

    #menu-toggle:checked {
        ~ nav > div > label[for='menu-toggle'] {
            .toggle-icon-inactive {
                display: none;
            }

            .toggle-icon-active {
                display: block;
            }
        }
    }

    #menu-toggle:checked ~ nav > div > .collapsible-menu {
        display: flex;
    }

    #menu-toggle:checked ~ nav > div > .collapsible-menu.collapsible-menu-horizontal {
        max-height: 200px;
    }
}

.breadcrumbs {
    li:not(:last-child) {
        line-height: 1rem;

        &::after {
            content: 'â€¢';
            display: inline-block;
            color: var(--color-text);
            font-size: 2.25em;
            vertical-align: bottom;
            margin-left: 0.5rem;
            line-height: 1rem;
            position: relative;
            top: -0.125rem;
        }
    }
}

input[type='search'] {
    &::placeholder {
        @apply text-gray-800;
    }

    &:focus + button {
        // @apply bg-tertiary;
        outline: 2px solid transparent;
        outline-offset: 2px;
        --ring-inset: var(--tailwind-empty,);
        --ring-offset-width: 0;
        --ring-offset-color: #fff;
        --ring-color: #286ba6;
        --ring-offset-shadow: var(--ring-inset) 0 0 0 var(--ring-offset-width)
            var(--ring-offset-color);
        --ring-shadow: var(--ring-inset) 0 0 0 calc(1px + var(--ring-offset-width))
            var(--ring-color);
        box-shadow: var(--ring-offset-shadow), var(--ring-shadow), var(--box-shadow, 0 0 #0000);
        border-color: #286ba6;
    }
}

.page-header-grid {
    display: grid;
    grid-template-columns:
        var(--page-padding)
        minmax(calc(50% - var(--page-padding) * 2), calc(var(--max-content-width) / 2))
        minmax(calc(50% - var(--page-padding) * 2), calc(var(--max-content-width) / 2))
        var(--page-padding);

    > .page-header-figure-wrapper,
    > .page-header-text {
        grid-column: 2 / -2;
    }

    @screen md {
        > .page-header-figure-wrapper {
            grid-column: 1 / 3;

            figure {
                max-width: 45rem;
                margin-right: 0;
                margin-left: auto;
            }

            figcaption {
                padding-right: var(--page-padding);
                padding-left: var(--page-padding);
            }
        }

        > .page-header-text {
            grid-column: 3 / -2;
        }
    }

    @media (min-width: #{$max-content-width - 2}) {
        // Swap out these values if you DON'T want to constraint the text to the max column width
        // grid-template-columns:
        // 	minmax(var(--page-padding), 1fr)
        // 	calc(50% - var(--page-padding) * 2)
        // 	calc(50% - var(--page-padding) * 2)
        // 	minmax(var(--page-padding), 1fr);

        grid-template-columns:
            minmax(var(--page-padding), 1fr)
            calc(var(--max-content-width) / 2)
            calc(var(--max-content-width) / 2)
            minmax(var(--page-padding), 1fr);
    }
}

.site-header-widgets {
    > * {
        margin-bottom: 1rem;
    }

    p {
        max-width: 17.5rem;
    }
}
